{"version":3,"sources":["middleware/dateFormat.js","components/reusableComponents/tests/TestCard.js"],"names":["formatDate","date1","date","Date","day","getDate","monthIndex","getMonth","year","getFullYear","TestCard","test","type","user","linkToTest","_id","testId","description","newDescription","length","slice","to","key","className","title","PointsCard","points","maxPoints","subject","icon","faThumbsUp","likes","faUser","results","createdAt"],"mappings":"4IAAMA,EAAa,SAAAC,GACf,IAAIC,EAAO,IAAIC,KAAKF,GAgBhBG,EAAMF,EAAKG,UACXC,EAAaJ,EAAKK,WAClBC,EAAON,EAAKO,cAEhB,OAAOL,EAAM,IAnBI,CACb,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAO0BE,GAAc,KAAOE,G,wBCwExCE,UAnFE,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KAExBC,EAAa,GAMjB,GAJIA,EAAU,wBADD,SAATF,GAA4B,YAATA,EACYD,EAAKI,IAELJ,EAAKK,QAEpCL,EAAKM,YAAa,CAClB,IAAIC,EAAiBP,EAAKM,YACtBC,EAAeC,QAAU,KACzBD,EAAiBA,EAAeE,MAAM,EAAG,IACzCF,GAAkB,OAEtBP,EAAKM,YAAcC,EAKvB,MAAa,WAATN,EAEI,kBAAC,IAAD,CAAMS,GAAKP,EAAaQ,IAAMX,EAAKI,KAC/B,yBAAKQ,UAAU,aACX,wBAAIA,UAAU,oBACRZ,EAAKa,OAEX,kBAACC,EAAA,EAAD,CAAYC,OAASf,EAAKe,OAASC,UAAYhB,EAAKgB,YACpD,kBAAC,IAAD,CAAMJ,UAAU,cAAcF,GAAE,0BAAuBR,EAAKE,IAA5B,YAAqCJ,EAAKI,MAA1E,eAGA,wBAAIQ,UAAU,mBACRvB,EAAWW,EAAKT,SAMzB,YAATU,EAEI,kBAAC,IAAD,CAAMS,GAAKP,GACP,yBAAKS,UAAU,aACX,wBAAIA,UAAU,oBACRZ,EAAKa,OAEX,wBAAID,UAAU,sBACRZ,EAAKiB,SAEX,yBAAKL,UAAU,mBACX,yBAAKA,UAAU,iBAAgB,kBAAC,IAAD,CAAiBA,UAAU,OAAOM,KAAOC,MAAxE,IAAwF,8BAAQnB,EAAKoB,MAAMZ,OAASR,EAAKoB,MAAMZ,OAAS,GAAxI,KACA,yBAAKI,UAAU,kBAAiB,kBAAC,IAAD,CAAiBA,UAAU,OAAOM,KAAOG,MAAzE,IAAqF,8BAAQrB,EAAKsB,QAAQd,QAA1G,MAEJ,wBAAII,UAAU,mBACRvB,EAAWW,EAAKuB,cAMzB,SAATtB,EAEI,kBAAC,IAAD,CAAMS,GAAKP,GACP,yBAAKS,UAAU,aACX,wBAAIA,UAAU,oBACRZ,EAAKa,OAEX,wBAAID,UAAU,sBACRZ,EAAKiB,SAEX,uBAAGL,UAAU,0BACPZ,EAAKM,YAAcN,EAAKM,YAAc,4BAE5C,yBAAKM,UAAU,mBACX,yBAAKA,UAAU,iBAAgB,kBAAC,IAAD,CAAiBA,UAAU,OAAOM,KAAOC,MAAxE,IAAwF,8BAAQnB,EAAKoB,MAAMZ,OAASR,EAAKoB,MAAMZ,OAAS,GAAxI,KACA,yBAAKI,UAAU,kBAAiB,kBAAC,IAAD,CAAiBA,UAAU,OAAOM,KAAOG,MAAzE,IAAqF,8BAAQrB,EAAKsB,QAAQd,QAA1G,MAEJ,wBAAII,UAAU,mBACRvB,EAAWW,EAAKuB,mBAlBtC","file":"static/js/3.54073d85.chunk.js","sourcesContent":["const formatDate = date1 => {\r\n    let date = new Date(date1);\r\n    let monthNames = [\r\n        'January',\r\n        'February',\r\n        'March',\r\n        'April',\r\n        'May',\r\n        'June',\r\n        'July',\r\n        'August',\r\n        'September',\r\n        'October',\r\n        'November',\r\n        'December'\r\n    ];\r\n\r\n    let day = date.getDate();\r\n    let monthIndex = date.getMonth();\r\n    let year = date.getFullYear();\r\n\r\n    return day + ' ' + monthNames[monthIndex] + ', ' + year;\r\n};\r\n\r\nexport {\r\n    formatDate\r\n}","import React from 'react'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { formatDate } from '../../../middleware/dateFormat'\r\nimport PointsCard from '../PointsCard'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUser, faThumbsUp } from '@fortawesome/free-regular-svg-icons'\r\n\r\nconst TestCard = ({ test, type, user }) => {\r\n\r\n    let linkToTest = '';\r\n    if (type === 'full' || type === 'created')\r\n        linkToTest = `/app/testInfo/${ test._id }`;\r\n    else \r\n        linkToTest = `/app/testInfo/${ test.testId }`;\r\n    \r\n    if (test.description) {\r\n        let newDescription = test.description;\r\n        if (newDescription.length >= 50) {\r\n            newDescription = newDescription.slice(0, 50)\r\n            newDescription += '...';\r\n        }\r\n        test.description = newDescription;\r\n    }\r\n    \r\n    \r\n\r\n    if (type === 'result')\r\n        return (\r\n            <Link to={ linkToTest } key={ test._id } >\r\n                <div className=\"test-card\">\r\n                    <h3 className=\"test-card__title\">\r\n                        { test.title }\r\n                    </h3>\r\n                    <PointsCard points={ test.points } maxPoints={ test.maxPoints } />\r\n                    <Link className=\"result-link\" to={ `/app/testResult/${ user._id }/${ test._id }` }>\r\n                        View result\r\n                    </Link>\r\n                    <h4 className=\"test-card__date\">\r\n                        { formatDate(test.date) }\r\n                    </h4>\r\n                </div>\r\n            </Link>\r\n        )\r\n    \r\n    if (type === 'created') \r\n        return (\r\n            <Link to={ linkToTest }>\r\n                <div className=\"test-card\">\r\n                    <h3 className=\"test-card__title\">\r\n                        { test.title }\r\n                    </h3>\r\n                    <h4 className=\"test-card__subject\">\r\n                        { test.subject }\r\n                    </h4>\r\n                    <div className=\"test-card__btns\">\r\n                        <div className=\"btns-btn left\"><FontAwesomeIcon className=\"icon\" icon={ faThumbsUp } /> <span>{ test.likes.length ? test.likes.length : 0 }</span> </div>\r\n                        <div className=\"btns-btn right\"><FontAwesomeIcon className=\"icon\" icon={ faUser } /> <span>{ test.results.length }</span> </div>\r\n                    </div>\r\n                    <h4 className=\"test-card__date\">\r\n                        { formatDate(test.createdAt) }\r\n                    </h4>\r\n                </div>\r\n            </Link>\r\n        )\r\n    \r\n    if (type === 'full') \r\n        return (\r\n            <Link to={ linkToTest }>\r\n                <div className=\"test-card\">\r\n                    <h3 className=\"test-card__title\">\r\n                        { test.title }\r\n                    </h3>\r\n                    <h4 className=\"test-card__subject\">\r\n                        { test.subject }\r\n                    </h4>\r\n                    <p className=\"test-card__description\">\r\n                        { test.description ? test.description : 'No description provided!' }\r\n                    </p>\r\n                    <div className=\"test-card__btns\">\r\n                        <div className=\"btns-btn left\"><FontAwesomeIcon className=\"icon\" icon={ faThumbsUp } /> <span>{ test.likes.length ? test.likes.length : 0 }</span> </div>\r\n                        <div className=\"btns-btn right\"><FontAwesomeIcon className=\"icon\" icon={ faUser } /> <span>{ test.results.length }</span> </div>\r\n                    </div>\r\n                    <h4 className=\"test-card__date\">\r\n                        { formatDate(test.createdAt) }\r\n                    </h4>\r\n                </div>\r\n            </Link>\r\n        )\r\n}\r\n\r\nexport default TestCard\r\n"],"sourceRoot":""}
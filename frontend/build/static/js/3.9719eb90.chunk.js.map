{"version":3,"sources":["components/reusableComponents/tests/TestCard.js"],"names":["TestCard","test","type","user","linkToTest","_id","testId","description","newDescription","length","slice","to","key","class","title","points","maxPoints","className","formatDate","date","subject","icon","faThumbsUp","likes","faUser","results","createdAt"],"mappings":"yGAAA,mEA6FeA,UAnFE,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KAExBC,EAAa,GAMjB,GAJIA,EAAU,wBADD,SAATF,GAA4B,YAATA,EACYD,EAAKI,IAELJ,EAAKK,QAEpCL,EAAKM,YAAa,CAClB,IAAIC,EAAiBP,EAAKM,YACtBC,EAAeC,QAAU,KACzBD,EAAiBA,EAAeE,MAAM,EAAG,IACzCF,GAAkB,OAEtBP,EAAKM,YAAcC,EAKvB,MAAa,WAATN,EAEI,kBAAC,IAAD,CAAMS,GAAKP,EAAaQ,IAAMX,EAAKI,KAC/B,yBAAKQ,MAAM,aACP,wBAAIA,MAAM,oBACJZ,EAAKa,OAEX,kBAAC,IAAD,CAAYC,OAASd,EAAKc,OAASC,UAAYf,EAAKe,YACpD,kBAAC,IAAD,CAAMC,UAAU,cAAcN,GAAE,0BAAuBR,EAAKE,IAA5B,YAAqCJ,EAAKI,MAA1E,eAGA,wBAAIQ,MAAM,mBACJK,YAAWjB,EAAKkB,SAMzB,YAATjB,EAEI,kBAAC,IAAD,CAAMS,GAAKP,GACP,yBAAKS,MAAM,aACP,wBAAIA,MAAM,oBACJZ,EAAKa,OAEX,wBAAID,MAAM,sBACJZ,EAAKmB,SAEX,yBAAKP,MAAM,mBACP,yBAAKA,MAAM,iBAAgB,kBAAC,IAAD,CAAiBI,UAAU,OAAOI,KAAOC,MAApE,IAAoF,8BAAQrB,EAAKsB,MAAMd,OAASR,EAAKsB,MAAMd,OAAS,GAApI,KACA,yBAAKI,MAAM,kBAAiB,kBAAC,IAAD,CAAiBI,UAAU,OAAOI,KAAOG,MAArE,IAAiF,8BAAQvB,EAAKwB,QAAQhB,QAAtG,MAEJ,wBAAII,MAAM,mBACJK,YAAWjB,EAAKyB,cAMzB,SAATxB,EAEI,kBAAC,IAAD,CAAMS,GAAKP,GACP,yBAAKS,MAAM,aACP,wBAAIA,MAAM,oBACJZ,EAAKa,OAEX,wBAAID,MAAM,sBACJZ,EAAKmB,SAEX,uBAAGP,MAAM,0BACHZ,EAAKM,YAAcN,EAAKM,YAAc,4BAE5C,yBAAKM,MAAM,mBACP,yBAAKA,MAAM,iBAAgB,kBAAC,IAAD,CAAiBI,UAAU,OAAOI,KAAOC,MAApE,IAAoF,8BAAQrB,EAAKsB,MAAMd,OAASR,EAAKsB,MAAMd,OAAS,GAApI,KACA,yBAAKI,MAAM,kBAAiB,kBAAC,IAAD,CAAiBI,UAAU,OAAOI,KAAOG,MAArE,IAAiF,8BAAQvB,EAAKwB,QAAQhB,QAAtG,MAEJ,wBAAII,MAAM,mBACJK,YAAWjB,EAAKyB,mBAlBtC","file":"static/js/3.9719eb90.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { formatDate } from '../../../middleware/dateFormat'\r\nimport PointsCard from '../PointsCard'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUser, faThumbsUp } from '@fortawesome/free-regular-svg-icons'\r\n\r\nconst TestCard = ({ test, type, user }) => {\r\n\r\n    let linkToTest = '';\r\n    if (type === 'full' || type === 'created')\r\n        linkToTest = `/app/testInfo/${ test._id }`;\r\n    else \r\n        linkToTest = `/app/testInfo/${ test.testId }`;\r\n    \r\n    if (test.description) {\r\n        let newDescription = test.description;\r\n        if (newDescription.length >= 50) {\r\n            newDescription = newDescription.slice(0, 50)\r\n            newDescription += '...';\r\n        }\r\n        test.description = newDescription;\r\n    }\r\n    \r\n    \r\n\r\n    if (type === 'result')\r\n        return (\r\n            <Link to={ linkToTest } key={ test._id } >\r\n                <div class=\"test-card\">\r\n                    <h3 class=\"test-card__title\">\r\n                        { test.title }\r\n                    </h3>\r\n                    <PointsCard points={ test.points } maxPoints={ test.maxPoints } />\r\n                    <Link className=\"result-link\" to={ `/app/testResult/${ user._id }/${ test._id }` }>\r\n                        View result\r\n                    </Link>\r\n                    <h4 class=\"test-card__date\">\r\n                        { formatDate(test.date) }\r\n                    </h4>\r\n                </div>\r\n            </Link>\r\n        )\r\n    \r\n    if (type === 'created') \r\n        return (\r\n            <Link to={ linkToTest }>\r\n                <div class=\"test-card\">\r\n                    <h3 class=\"test-card__title\">\r\n                        { test.title }\r\n                    </h3>\r\n                    <h4 class=\"test-card__subject\">\r\n                        { test.subject }\r\n                    </h4>\r\n                    <div class=\"test-card__btns\">\r\n                        <div class=\"btns-btn left\"><FontAwesomeIcon className=\"icon\" icon={ faThumbsUp } /> <span>{ test.likes.length ? test.likes.length : 0 }</span> </div>\r\n                        <div class=\"btns-btn right\"><FontAwesomeIcon className=\"icon\" icon={ faUser } /> <span>{ test.results.length }</span> </div>\r\n                    </div>\r\n                    <h4 class=\"test-card__date\">\r\n                        { formatDate(test.createdAt) }\r\n                    </h4>\r\n                </div>\r\n            </Link>\r\n        )\r\n    \r\n    if (type === 'full') \r\n        return (\r\n            <Link to={ linkToTest }>\r\n                <div class=\"test-card\">\r\n                    <h3 class=\"test-card__title\">\r\n                        { test.title }\r\n                    </h3>\r\n                    <h4 class=\"test-card__subject\">\r\n                        { test.subject }\r\n                    </h4>\r\n                    <p class=\"test-card__description\">\r\n                        { test.description ? test.description : 'No description provided!' }\r\n                    </p>\r\n                    <div class=\"test-card__btns\">\r\n                        <div class=\"btns-btn left\"><FontAwesomeIcon className=\"icon\" icon={ faThumbsUp } /> <span>{ test.likes.length ? test.likes.length : 0 }</span> </div>\r\n                        <div class=\"btns-btn right\"><FontAwesomeIcon className=\"icon\" icon={ faUser } /> <span>{ test.results.length }</span> </div>\r\n                    </div>\r\n                    <h4 class=\"test-card__date\">\r\n                        { formatDate(test.createdAt) }\r\n                    </h4>\r\n                </div>\r\n            </Link>\r\n        )\r\n}\r\n\r\nexport default TestCard\r\n"],"sourceRoot":""}